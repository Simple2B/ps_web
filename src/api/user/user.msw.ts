/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 1.0.6
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  Greeting,
  User
} from '.././model'

export const getAPIWhoamiResponseMock = (overrideResponse: Partial< User > = {}): User => ({email: faker.word.sample(), username: faker.word.sample(), ...overrideResponse})

export const getAPIGreetingResponseMock = (overrideResponse: Partial< Greeting > = {}): Greeting => ({message: faker.word.sample(), ...overrideResponse})


export const getAPIWhoamiMockHandler = (overrideResponse?: User | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<User> | User)) => {
  return http.get('*/api/user/whoami', async (info) => {await delay(1000);
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getAPIWhoamiResponseMock()),
      {
        status: 200,
        headers: {
          'Content-Type': 'application/json',
        }
      }
    )
  })
}

export const getAPIGreetingMockHandler = (overrideResponse?: Greeting | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Greeting> | Greeting)) => {
  return http.get('*/api/user/greeting', async (info) => {await delay(1000);
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getAPIGreetingResponseMock()),
      {
        status: 200,
        headers: {
          'Content-Type': 'application/json',
        }
      }
    )
  })
}
export const getUserMock = () => [
  getAPIWhoamiMockHandler(),
  getAPIGreetingMockHandler()
]
